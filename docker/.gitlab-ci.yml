stages:
  - build_docker
  - docker_deploy


build_stage:
  image: docker:latest
  stage: docker_build
  services:
      - docker:dind
  variables:
      DOCKER_DRIVER: "overlay"
  before_script:
    - "docker version"
    - docker run --rm -v $(pwd):/app -v ~/.ssh:/root/.ssh composer/composer install --no-dev --ignore-platform-reqs
    - ls -la
    - "docker info"
    - "docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY"
  script:
    - "docker build -t ${CI_REGISTRY}/${CI_PROJECT_PATH}/php:latest --pull -f ./docker/prod/php/Dockerfile ."
    - "docker build -t ${CI_REGISTRY}/${CI_PROJECT_PATH}/nginx:latest --pull -f ./docker/prod/nginx/Dockerfile ."
    - "docker push ${CI_REGISTRY}/${CI_PROJECT_PATH}/php:latest"
    - "docker push ${CI_REGISTRY}/${CI_PROJECT_PATH}/nginx:latest"
  after_script:
    - "docker logout ${CI_REGISTRY}"
  except:
    - master

deploy_digitalocean:
  image: gitlab/dind:latest
  stage: docker_deploy
  before_script:
      - mkdir ~/.ssh
      - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
      - chmod 600 ~/.ssh/id_rsa
      - eval "$(ssh-agent -s)"
      - ssh-add <(echo "$SSH_PRIVATE_KEY")
      - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
      - scp -rv ./docker-compose.autodeploy.yml root@${DEPLOYMENT_SERVER_IP}:~/
      - ssh root@$DEPLOYMENT_SERVER_IP "docker rm -f $(docker ps -qa); docker rmi $(docker images -qa --digests); docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}; docker-compose -f docker-compose.autodeploy.yml stop;  docker-compose -f docker-compose.autodeploy.yml rm nginx --force; docker pull ${CI_REGISTRY}/${CI_PROJECT_PATH}/nginx:latest;  docker-compose -f docker-compose.autodeploy.yml rm php --force; docker pull ${CI_REGISTRY}/${CI_PROJECT_PATH}/php:latest;  docker-compose -f docker-compose.autodeploy.yml up -d nginx"
  except:
      - master
